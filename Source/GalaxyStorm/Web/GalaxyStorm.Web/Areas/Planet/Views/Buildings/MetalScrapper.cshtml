@model GalaxyStorm.ViewModels.Buildings.BuildingsViewModel

<div class="row">
    <div class="col-lg-12">
        <h2 class="page-header">
            @Model.MetalScrapper.Name <small>Level @Model.MetalScrapper.Level</small>
        </h2>
    </div>
</div>

<div class="well">
    <div class="row">
        <div class="col-md-6">
            <span>Overview:</span>
            <hr />
            <p>@Model.MetalScrapper.Description</p>
            @if (Model.MetalScrapper.Level > 0)
            {
                <p>
                    Current Level: <span class="text-primary">Generates @(Model.MetalScrapper.ResourceIncome) metal every hour.</span>
                </p>
            }
            @if (@Model.CurrentlyBuilding == "MetalScrapper")
            {
                <span>Upgrade:</span>
                <hr />
                <p class="text-center"><strong>Level @(Model.MetalScrapper.Level + 1)</strong> ready in: @string.Format("{0:0.00}", Model.MinutesLeftToBuild) minutes!</p>
                <p>
                    <div class="progress progress-striped active">
                        <div class="progress-bar progress-bar-danger" style="width: @Model.PercentsBuilt%"></div>
                    </div>
                </p>
            }
            else
            {
                if (@Model.MetalScrapper.Level > 0)
                {
                    <p class="text-center">Level @Model.MetalScrapper.Level / @Model.MetalScrapper.MaxLevel</p>
                }
                else
                {
                    <p class="text-center">Not built yet! (Requires HQ Level @Model.MetalScrapper.Prerequisite)</p>
                }
                <p>
                    <div class="progress">
                        <div class="progress-bar" style="width: @((Model.MetalScrapper.Level / (double)Model.MetalScrapper.MaxLevel) * 100)%"></div>
                    </div>
                </p>
                <span>Upgrade:</span>
                <hr />
                if (@Model.MetalScrapper.Level < @Model.MetalScrapper.MaxLevel)
                {
                    <p>
                        Next Level: <span class="text-primary">Generates @(Model.MetalScrapper.NextResourceIncome) metal every hour.</span>
                    </p>
                    if (@Model.Headquarters.Level >= @Model.MetalScrapper.Prerequisite)
                    {
                        <div class="text-center">
                            <p>
                                Required Resources (Level @(Model.MetalScrapper.Level + 1)):
                                <i class="ion-ios-sunny-outline size-18 text-info"> </i> @Model.MetalScrapper.RequiredEnergy&nbsp;
                                <i class="ion-ios-flower-outline size-18 text-warning"> </i> @Model.MetalScrapper.RequiredCrystals&nbsp;
                                <i class="ion-ios-cog-outline size-18 text-primary"> </i> @Model.MetalScrapper.RequiredMetal
                            </p>
                            @if (@Model.Headquarters.Level <= @Model.MetalScrapper.Level)
                            {
                                <p class="text-center text-danger">You need to upgrade your Headquarters further.</p>
                            }
                            else
                            {
                                if (@Model.CurrentlyBuilding != "None")
                                {
                                    <p class="text-center text-danger">The construction of another building is currently in progress ...</p>
                                }
                                else
                                {
                                    if (ViewBag.Energy < @Model.MetalScrapper.RequiredEnergy
                                        || ViewBag.Crystal < @Model.MetalScrapper.RequiredCrystals
                                        || ViewBag.Metal < @Model.MetalScrapper.RequiredMetal)
                                    {
                                        <p class="text-center text-danger">Not enough resources to upgrade this building!</p>
                                    }
                                    else
                                    {
                                        using (Html.BeginForm("UpgradeMetalScrapper", "Buildings", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                                        {
                                            @Html.AntiForgeryToken()
                                            <button class="btn btn-default text-center">
                                                Upgrade
                                            </button>
                                        }
                                    }

                                    <p>Raw build time:  <i class="ion-ios-timer-outline size-18"> </i> @Model.MetalScrapper.RequiredBuildTime min.</p>
                                }
                            }
                        </div>
                    }
                    else
                    {
                        <p class="text-center">Not built yet! (Requires HQ Level @Model.MetalScrapper.Prerequisite)</p>
                    }
                }
                else
                {
                    <p class="text-center text-success">Max level reached!</p>
                }
            }
        </div>
        <div class="col-md-6">
            <img src="~/Images/300xX/metal-scrapper.png" alt="@Model.MetalScrapper.Name" class="small-img-300" />
        </div>
    </div>
</div>


