@model GalaxyStorm.ViewModels.Fleet.FleetViewModel

<div class="row">
    <div class="col-md-4">
        <div class="panel panel-danger">
            <div class="panel-heading">
                <h6 class="text-center">
                    @Html.ActionLink(@Model.Scout.Name, "Scout", "Fleet", new { area = "Planet" }, null)
                </h6>
            </div>
            <div class="panel-body text-center">
                <img src="~/Images/100xX/scout.png" alt="scout" class="small-img-100" />
                <hr />
                <div class="required-resources">
                    <span class="required-energy" data-req="@Model.Scout.RequiredEnergy">@Model.Scout.RequiredEnergy</span>&nbsp;

                    <span class="required-crystals" data-req="@Model.Scout.RequiredCrystals">@Model.Scout.RequiredCrystals</span>&nbsp;

                    <span class="required-metal" data-req="@Model.Scout.RequiredMetal">@Model.Scout.RequiredMetal</span>

                    <br />
                    <div class="col-md-12">
                        <div id="slider1"></div>
                    </div>
                </div>
                <br />
                @Html.ActionLink("Details", "Scout", "Fleet", new { area = "Planet" }, new { @class = "btn btn-default" })
            </div>
        </div>
    </div>
    <div class="col-md-4">
        <div class="panel panel-danger">
            <div class="panel-heading">
                <h6 class="text-center">
                    @Html.ActionLink(@Model.Carrier.Name, "Carrier", "Fleet", new { area = "Planet" }, null)
                </h6>
            </div>
            <div class="panel-body text-center">
                <img src="~/Images/100xX/carrier.png" alt="carrier" class="small-img-100" />
                <hr />
                <h4 class="text-center">
                    @Model.Carrier.AmountOnPlanet / @(Model.Carrier.AmountOnPlanet + Model.Carrier.AmountDispatched)
                </h4>
                @Html.ActionLink("Details", "Carrier", "Fleet", new { area = "Planet" }, new { @class = "btn btn-default" })
            </div>
        </div>
    </div>
    <div class="col-md-4">
        <div class="panel panel-danger">
            <div class="panel-heading">
                <h6 class="text-center">
                    @Html.ActionLink(@Model.Fighter.Name, "Fighter", "Fleet", new { area = "Planet" }, null)
                </h6>
            </div>
            <div class="panel-body text-center">
                <img src="~/Images/100xX/fighter.png" alt="fighter" class="small-img-100" />
                <hr />
                <h4 class="text-center">
                    @Model.Fighter.AmountOnPlanet / @(Model.Fighter.AmountOnPlanet + Model.Fighter.AmountDispatched)
                </h4>
                @Html.ActionLink("Details", "Fighter", "Fleet", new { area = "Planet" }, new { @class = "btn btn-default" })
            </div>
        </div>
    </div>
    <div class="col-md-4">
        <div class="panel panel-danger">
            <div class="panel-heading">
                <h6 class="text-center">
                    @Html.ActionLink(@Model.Interceptor.Name, "Interceptor", "Fleet", new { area = "Planet" }, null)
                </h6>
            </div>
            <div class="panel-body text-center">
                <img src="~/Images/100xX/interceptor.png" alt="interceptor" class="small-img-100" />
                <hr />
                <h4 class="text-center">
                    @Model.Interceptor.AmountOnPlanet / @(Model.Interceptor.AmountOnPlanet + Model.Interceptor.AmountDispatched)
                </h4>
                @Html.ActionLink("Details", "Interceptor", "Fleet", new { area = "Planet" }, new { @class = "btn btn-default" })
            </div>
        </div>
    </div>
    <div class="col-md-4 col-md-offset-3">
        <div class="panel panel-danger">
            <div class="panel-heading">
                <h6 class="text-center">
                    @Html.ActionLink(@Model.Bomber.Name, "Bomber", "Fleet", new { area = "Planet" }, null)
                </h6>
            </div>
            <div class="panel-body text-center">
                <img src="~/Images/100xX/bomber.png" alt="bomber" class="small-img-100" />
                <hr />
                <h4 class="text-center">
                    @Model.Bomber.AmountOnPlanet / @(Model.Bomber.AmountOnPlanet + Model.Bomber.AmountDispatched)
                </h4>
                @Html.ActionLink("Details", "Bomber", "Fleet", new { area = "Planet" }, new { @class = "btn btn-default" })
            </div>
        </div>
    </div>
    <div class="col-md-4">
        <div class="panel panel-danger">
            <div class="panel-heading">
                <h6 class="text-center">
                    @Html.ActionLink(@Model.Juggernaut.Name, "Juggernaut", "Fleet", new { area = "Planet" }, null)
                </h6>
            </div>
            <div class="panel-body text-center">
                <img src="~/Images/100xX/juggernaut.png" alt="juggernaut" class="small-img-100" />
                <hr />
                <h4 class="text-center">
                    @Model.Juggernaut.AmountOnPlanet / @(Model.Juggernaut.AmountOnPlanet + Model.Juggernaut.AmountDispatched)
                </h4>
                @Html.ActionLink("Details", "Juggernaut", "Fleet", new { area = "Planet" }, new { @class = "btn btn-default" })
            </div>
        </div>
    </div>
</div>

<script>
    $(function () {
        function repositionTooltip(e, ui) {
            // If you're on Bootstrap 3.x change "tooltip" to "bs.tooltip"
            // Props to fd_tl in the comments for the tip!
            var div = $(ui.handle).data("bs.tooltip").$tip[0];
            var pos = $.extend({}, $(ui.handle).offset(), {
                width: $(ui.handle).get(0).offsetWidth,
                height: $(ui.handle).get(0).offsetHeight
            });

            var actualWidth = div.offsetWidth;

            tp = { left: pos.left + pos.width / 2 - actualWidth / 2 }
            $(div).offset(tp);

            $(div).find(".tooltip-inner").text(ui.value);
        }

        function recalculateRequiredResources(e, ui) {
            var value = +ui.value || 0;
            var div = $(ui.handle).closest('.required-resources');
            var reqEnergy = $(div.find('.required-energy')[0]);
            var reqCrystals = $(div.find('.required-crystals')[0]);
            var reqMetal = $(div.find('.required-metal')[0]);

            reqEnergy.text(+reqEnergy.attr("data-req") * value);
            reqCrystals.text(+reqCrystals.attr("data-req") * value);
            reqMetal.text(+reqMetal.attr("data-req") * value);
        }

        $("#slider1").slider({
            min: 0,
            max: 512,
            slide: function (e, ui) {
                repositionTooltip(e, ui);
                // recalculateRequiredResources(e, ui);
            },
            stop: function (e, ui) {
                repositionTooltip(e, ui);
                recalculateRequiredResources(e, ui);
            }
        });
        $("#slider1 .ui-slider-handle:first").tooltip({ title: $("#slider1").slider("value") || "0", trigger: "manual" }).tooltip("show");

    });

</script>